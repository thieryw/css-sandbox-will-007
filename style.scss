// https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox

html {
  font-family: sans-serif;
}

body {
  margin: 0;
  
}

#app {

  #example_1 {

    > header {
      background: purple;
      height: 100px;

      > h1 {
        text-align: center;
        color: white;
        line-height: 100px;
        margin: 0;
      }
    }





    section {
      display: flex;
      flex-direction: row; //default
      //flex-direction: column; //much like without flex
      //flex-direction: row-reverse;
      //flex-direction: column-reverse;

      > article {
        padding: 10px;
        margin: 10px;
        background: aqua;
      }
    }

  }

  #example_2 {

    header {
      background: purple;
      height: 100px;
        > h1 {
        text-align: center;
        color: white;
        line-height: 100px;
        margin: 0;
        }
    }



    > section {
      
      display: flex;
      //flex-wrap: nowrap; //default, element break out the container
      flex-wrap: wrap;

  
       > article {
          padding: 10px;
          margin: 10px;
          background: aqua;
          /*
          The rule is: if there is not enough space to fit
          n element of at least Xpx then n-1 elements are put
          and they fill up all available space. 
          */
          //flex: 200px;
       }

    }
 

  }


  #example_3 {

    header {
      background: purple;
      height: 100px;

      > h1 {
        text-align: center;
        color: white;
        line-height: 100px;
        margin: 0;
      }
    }





    > section {
      display: flex;
      flex-direction: row; //default

      > article {
        padding: 10px;
        margin: 10px;
        background: aqua;

        //flex: 1;
        flex: 1 150px; // We can define the min width.
        /*
        The flex basis only real matter when all the element
        that has one specified can take this size without
        requireing the elements to break outside their container
        it will mean that the ones that do not have a flex basis 
        will be smaller than they normaly would be.
        Play with te with of the viewport for understanding
        how it works.
        */
    
      }

      > article:nth-of-type(2){
        //Doing this I also set back the min width to auto.
        flex: 2;
        min-width: auto;;
      }

    }

  }

  #example_4 {



    div {
      height: 150px;
      border: 1px solid black;

 

      > button {


        font-size: 18px;
        //line-height: 1.5;
        width: 15%;
        flex: 1;

        $margin: 1em;


        margin-left: $margin;

        &:last-of-type {
          margin-right: $margin;
        }

      }

    

      
      display:flex;
      //align-items: center;
      //align-items: flex-start;
      //align-items: flex-end;


      justify-content: space-around;
      //justify-content: space-between; // no spaces on the side.
      //justify-content: flex-end;

      /*
      By default the flex items takes all the heign available
      if the parent is constrained, test align-items: center
      , for example, to change this behaviour 
      */
      align-items: auto;


      button:nth-of-type(3) { //selects Wink
        background-color: blue;
        order: -1;
      }

    }
  }
}

// https://www.youtube.com/watch?v=KOvGeFUHAC0&feature=emb_logo
#example_7 {

  * {box-sizing: border-box; }
  background-color: pink;
  border: 1px solid black;
  width: 100vw;
  height: 100vh;
  
  display: flex;
  flex-direction: column;
  



  > header {
      width: 100%;
  }

  
  > section {

    flex:1;
    overflow: hidden;
    display: flex;
  

    > nav {
      
      padding-right: 15px;
      height:100%;
      border: 1px purple solid;
      overflow: auto;
      
    }

    > section {

      height: 100%; 
      flex: 1;
      display: flex;
      flex-direction: column;

      > main {
        flex: 1;
        border: 1px;
        overflow: auto; 
      }

      > footer {
        border: red solid 1px;
      }

    }

  }







  margin-bottom: 400px;




}


#example_8 {

  border: 1px solid black;
  height: 500px;

  display: flex;
  justify-content: center;
  align-items: center;

  > div {
    width: 80%;
    background-color: red;
    @media (max-width: 360px) {
      
        width: 100%;
      
    }
    

  }



}







/* Add your flexbox CSS below here */
